quarkus.application.name=election-management
quarkus.shutdown.timeout=5S
quarkus.http.port=8081
quarkus.http.test-port=8083
quarkus.http.test-ssl-port=8446

quarkus.flyway.migrate-at-start=true
quarkus.datasource.devservices.image-name=mariadb:latest

# HIBERNATE
quarkus.datasource.db-kind=mariadb
quarkus.hibernate-orm.database.generation=none
%dev.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.bind-parameters=true
%test.quarkus.hibernate-orm.log.bind-parameters=true

# LOGGING
%prod.quarkus.log.handler.gelf.enabled=true
%prod.quarkus.log.handler.gelf.additional-field."app".value=${quarkus.application.name}
%prod.quarkus.log.handler.gelf.include-full-mdc=true
%prod.quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
# Configuração do Graylog
%prod.quarkus.log.handler.gelf.host=graylog
%prod.quarkus.log.handler.gelf.port=12201

# OPENTELEMETRY
#%prod.quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
%prod.quarkus.opentelemetry.enabled=true
%dev.quarkus.opentelemetry.enabled=false
%test.quarkus.opentelemetry.enabled=false

# Ativar a instrumentação JDBC do OpenTelemetry
%prod.quarkus.datasource.jdbc.telemetry=true
%dev.quarkus.datasource.jdbc.telemetry=false
